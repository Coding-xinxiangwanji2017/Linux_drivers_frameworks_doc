Freescales_imx6配置IOMUX

imx6的Soc芯片提供IOMUX机制, 用来解决引脚复用的问题。

需要配置的寄存器:
1. Pad控制寄存器
2. Mux控制寄存器
3. Select Input寄存器

配置IOMUX的必备工具:
    原理图
    芯片手册
    内核源代码

--------------------------------
配置步骤
--------------------------------
1. 查看原理图
下面是USB转串口芯片的原理图，我们需要配置UART1_RX这个接口。
    uart.jpeg

通过UART1_RX,我们可以在i.mx6的原理图中,找到对应的引脚 CSI0_DAT11。
  imx6_soc.jpeg
  
2. 查找软件手册(引脚功能)
软件手册第4章
查找CSI0_DAT11，可以得到两个重要的信息:

    Pad的控制寄存器名称:     SW_PAD_CTL_PAD_CSI0_DATA11
    CSI0_DAT11的功能UART1_RX_DATA 用于查找其他两个寄存器
        uart_function.jpeg

    查找UART1_RX_DATA，可以得到两个寄存器
    Mux的控制寄存器名称:    IOMUX_SW_MUX_CTL_PAD_CSI0_DATA11

    Select Input的寄存器名称: IOMUXC_UART1_UART_RX_DATA_SELECT_INPUT
        uart_muxoption.jpeg

3. 查找软件手册(IOMUX功能配置)
软件手册第36章, 介绍了IOMUX需要配置寄存器的所有信息。

根据三个寄存器的名称,进行查找:
    Pad的控制寄存器名称:       SW_PAD_CTL_PAD_CSI0_DATA11
    Mux的控制寄存器名称:       IOMUX_SW_MUX_CTL_PAD_CSI0_DATA11
    Select Input的寄存器名称: IOMUXC_UART1_UART_RX_DATA_SELECT_INPUT

IOMUX_SW_PAD_CTL_PAD_CSI0_DATA11:   偏移地址：654h
Pad控制寄存器,主要用于控制引脚的上拉电阻，下拉电阻和电压控制
          pad.jpeg

IOMUX_SW_MUX_CTL_PAD_CSI0_DATA11:   偏移地址：284h
配置MUX_MODE的模式为ALT3，就能使用UART1_RX_DATA的功能(pin )
          mux.jpeg

IOMUXC_UART1_UART_RX_DATA_SELECT_INPUT:    偏移地址：920h
          selectinput.jpeg
          
-------------------------------
三 源码配置
-------------------------------
配置IOMUX的过程，实际上就是向指定的地址,写入配置值的过程。

内核代码提供专门的宏 IOMUX_PAD，用来把IOMUX的配置,进行拼装，然后写入到指定的地址中。
IOMUX_PAD 定义:
    文件 ~/android/kernel_imx/arch/arm/plat-mxc/include/mach/iomux-v3.h

/*
 *      build IOMUX_PAD structure
 *
 * This iomux scheme is based around pads, which are the physical balls
 * on the processor.
 *
 * - Each pad has a pad control register (IOMUXC_SW_PAD_CTRL_x) which controls
 *   things like driving strength and pullup/pulldown.
 * - Each pad can have but not necessarily does have an output routing register
 *   (IOMUXC_SW_MUX_CTL_PAD_x).
 * - Each pad can have but not necessarily does have an input routing register
 *   (IOMUXC_x_SELECT_INPUT)
 *
 * The three register sets do not have a fixed offset to each other,
 * hence we order this table by pad control registers (which all pads
 * have) and put the optional i/o routing registers into additional
 * fields.
 *
 * The naming convention for the pad modes is MX35_PAD_<padname>__<padmode>
 * If <padname> or <padmode> refers to a GPIO, it is named
 * GPIO_<unit>_<num>
 *
 * IOMUX/PAD Bit field definitions
 *
 * MUX_CTRL_OFS:            0..11 (12)
 * PAD_CTRL_OFS:           12..23 (12)
 * SEL_INPUT_OFS:          24..35 (12)
 * MUX_MODE + SION:        36..40  (5)
 * PAD_CTRL + NO_PAD_CTRL: 41..58 (18)
 * SEL_INP:                59..62  (4)
 * reserved:                 63    (1)
*/

#define IOMUX_PAD(_pad_ctrl_ofs, _mux_ctrl_ofs, _mux_mode, _sel_input_ofs,  _sel_input, _pad_ctrl)  
                (((iomux_v3_cfg_t)(_mux_ctrl_ofs) << MUX_CTRL_OFS_SHIFT) |       
                ((iomux_v3_cfg_t)(_mux_mode) << MUX_MODE_SHIFT) |                 
                ((iomux_v3_cfg_t)(_pad_ctrl_ofs) << MUX_PAD_CTRL_OFS_SHIFT) |   
                ((iomux_v3_cfg_t)(_pad_ctrl) << MUX_PAD_CTRL_SHIFT) |                 
                ((iomux_v3_cfg_t)(_sel_input_ofs) << MUX_SEL_INPUT_OFS_SHIFT) | 
                ((iomux_v3_cfg_t)(_sel_input) << MUX_SEL_INPUT_SHIFT))

参数:
    _pad_ctrl_ofs //pad控制寄存器的偏移地址
    _mux_ctrl_ofs //mux控制寄存器的偏移地址
    _mux_mode       //mux的模式
    _sel_input_ofs  //input寄存器的偏移地址
    _sel_input      //input的类型


-------------------------------
配置
-------------------------------
通过软件手册,查找到三个寄存器的地址, 使用IOMUX_PAD配置代码。

    SW_PAD_CTL_PAD_CSI0_DATA11 偏移地址 0x654
    IOMUX_SW_MUX_CTL_PAD_CSI0_DATA11 偏移地址 0x284
    IOMUXC_UART1_UART_RX_DATA_SELECT_INPUT 偏移地址 0x920

文件 ~/android/kernel_imx/arch/arm/plat-mxc/include/mach/iomux-mx6q.h

#define _MX6Q_PAD_CSI0_DAT11__UART1_RXD                 \
                IOMUX_PAD(0x0654, 0x0284, 3, 0x0920, 1, 0)


总结： 描述了从原理图查找指定引脚，到软件手册找到Mux，Pad，Sel_Input的寄存器配置信息，再到内核代码如何进行配置的全部--太复杂.



------------------------------------------------------------------------------------------------------------------------
寄存器命名规则

在\arch\arm\plat-mxc\include\mach\iomux-v3.h中的第43行，说明了iMX6引脚配置的寄存器的一般命名规则

/*
 *   buildIOMUX_PAD structure
 *
 * This iomux scheme is based around pads,which are the physical balls
 * on the processor.
 *
 * - Each pad has a pad control register(IOMUXC_SW_PAD_CTRL_x) which controls
 *  things like driving strength and pullup/pulldown.
 * - Each pad can have but not necessarily doeshave an output routing register
 *  (IOMUXC_SW_MUX_CTL_PAD_x).
 * - Each pad can have but not necessarily doeshave an input routing register
 *  (IOMUXC_x_SELECT_INPUT)
 *
 * The three register sets do not have a fixedoffset to each other,
 * hence we order this table by pad controlregisters (which all pads
 * have) and put the optional i/o routingregisters into additional
 * fields.
 *
 * The naming convention for the pad modes is MX35_PAD_<padname>__<padmode>
 * If <padname> or <padmode> refersto a GPIO, it is named
 * GPIO_<unit>_<num>
 *
 * IOMUX/PAD Bit field definitions
 *
 * MUX_CTRL_OFS:                  0..11 (12)
 * PAD_CTRL_OFS:                  12..23 (12)
 * SEL_INPUT_OFS:                 24..35 (12)
 * MUX_MODE + SION:               36..40 (5)
 * PAD_CTRL + NO_PAD_CTRL:        41..58 (18)
 * SEL_INP:                       59..62(4)
 * reserved:                      63    (1)
*/

这个头文件中提到，每个复用管脚,最多有三个寄存器：

管脚控制寄存器：IOMUXC_SW_PAD_CTL_x， x代表某某管脚名称
输出路由寄存器：IOMUXC_SW_MUX_CTL_PAD_x
输入路由寄存器：IOMUXC_x_SELECT_INPUT

Datasheet中使用

 

管脚模式的命名规则为：MX6Q_PAD_<padname>__<padmode>

padname为管脚名，padmode为管脚模式。

如表1中，CSI0_DAT4为padname，取Signal为GPIO5_IO22是，padmode即为ALT5，则其复用管脚名称为MX6Q_PAD_CSI0_DAT4__GPIO5_IO22

Linux内核中使用

 
2.   在内核中定义复用管脚的寄存器

\arch\arm\plat-mxc\include\mach\iomux-mx6q.h中

MX6Q_PAD_SD3_DAT6__GPIO_6_18的定义为

#define  MX6Q_PAD_SD3_DAT6__GPIO_6_18         \
       (_MX6Q_PAD_SD3_DAT6__GPIO_6_18 |MUX_PAD_CTRL(NO_PAD_CTRL))
其中
#define MUX_PAD_CTRL(x)              ((iomux_v3_cfg_t)(x)<< MUX_PAD_CTRL_SHIFT)
typedef u64 iomux_v3_cfg_t;

#define MUX_PAD_CTRL_SHIFT     41
#defineNO_PAD_CTRL               (1 << 17)
其中_MX6Q_PAD_SD3_DAT6__GPIO_6_18定义为：

#define_MX6Q_PAD_SD3_DAT6__GPIO_6_18                 \
              IOMUX_PAD(0x0694, 0x02AC, 5,0x0000, 0, 0)

这个 IOMUX_PAD 宏是定义GPIO的关键宏，其原型为：

#defineIOMUX_PAD(_pad_ctrl_ofs, _mux_ctrl_ofs, _mux_mode, _sel_input_ofs, \
              _sel_input, _pad_ctrl)      

IOMUX_PAD宏有6个参数，每个参数的意思是：

参数
含义
_pad_ctrl_ofs //控制寄存器的偏移地址(16进制)
_mux_ctrl_ofs //MUX控制寄存器的偏移地址(16进制),用于选择引脚的功能
_mux_mode     //MUX模式，bit0~3，范围0~7
_select_input_ofs //SELECT_INPUT寄存器偏移地址(16进制)
_select_input  //Daisy Chain模式,bit0~1,范围0~3
_pad_ctrl: bits to be set in register 
_pad_ctrl_ofs for configuration selection

因此对应关系如下：
    0x0694      |     0x02AC    |         0x5       |    0x0000    |      0x0     |      0x0
----------------------------------------------------------------------------------------------------
mux_ctrl_ofs | pad_ctrl_ofs |sel_input_ofs | mux_mode | sel_input | pad_ctrl


映射关系：
MX6Q_PAD_SD3_DAT6__GPIO_6_18  ->   IOMUX_PAD(0x0694, 0x02AC, 5, 0x0000, 0, 0)

例如：MX6Q_PAD_SD3_DAT6__GPIO_6_18，管脚名（padname）为SD3_DAT6。
